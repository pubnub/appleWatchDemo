# Polling Demo

## Description
This is simple three-component project where each component designed for it's own role. +
They are:

* `poll host` - component which is running on OS X and responsible for active polls management.
* `attendee app` - application which is running on attendee's device and allow to react on announced polling.
* `observer` - component which is running on Apple Watch and allow to observe votes results in real-time.

*PubNub* client compatible with each of components from above. Workspace configured to use static libraries to demonstrate separate binaries for each component.

NOTE: it is strongly recommended not to use PubNub client directly on the _Apple Watch_ and to organize project architecture in a way where paired device will be the core for data retrieval. +
_Apple Watch_ in default configuration w/o user interaction will turnoff screen after 15 seconds - this is how Apple tell us not to run any long-running tasks (like subscribe from PubNub client) on Apple Watch.

## Components
Short information about each component and what it is able to do.

### Poll host
Poll host allow to publish new poll with configured question and up to 5 options for response. +
Application itself show statistic on real-time basis in table. Statistic for attendees and observers aggregated and sent on interval basis (half a second interval). +
If previous pall wasn't completed properly, after restart application will pull out information about it and last statistic which has been generated by it.

NOTE: While host if offline, votes from attendees won't be saved (saved only though aggregated updates).

### Attendee applications
Application allow user to give his voice for one of options provided by `poll host`. As soon as publish operation will be completed, user will be presented with bar chart which will be updated every time when host will publish aggregated statistic information (at this moment it is half a second). +
Same as host application attendee's version also support previous session restore and able to pull out poll information even if it was announced before user installed this application. Latest statistic will be pulled out as well.

NOTE: This is simplified polling system which doesn't track whether concrete attendee already gave his voice or not.

Application (with proper PubNub account and provisioning configuration) provide push notifications for each time when new poll announced or completed.

### Observer
This is Apple Watch Extension which allow to observe polling process in real-time using bar chart on the screen. +
Same as host and attendee's application this module is able to catch up on previously started polling session and receive latest aggregated statistics. +

## How to try

To be able to deploy on device and launch host application you need to prepare working space by running next CocoaPod command from repository root folder in terminal:

[source,shell]
pod install

After everything will be completed, open `PubNubPoll.xcworkspace` workspace and use configured targets for deployment and host launching.
